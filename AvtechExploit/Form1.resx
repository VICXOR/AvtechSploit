<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAYAEBAQAAEABAAoAQAAZgAAACAgEAABAAQA6AIAAI4BAAAwMBAAAQAEAGgGAAB2BAAAEBACAAEA
        AQCwAAAA3goAACAgAgABAAEAMAEAAI4LAAAwMAIAAQABADADAAC+DAAAKAAAABAAAAAgAAAAAQAEAAAA
        AACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAgICAAAAA
        /wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAeIiIiAAAAAD///iIgAAAAAiIiIiAAAAAB4
        h3eAAAAAAPS0x4AAAAAA/EtIgAAAAAD8RLsAiIgAAPi7u7CIiIAAAAC7u7CIgAAAAAu4h3gAAAAACEtM
        eAAAAAAPxLR4AAAAAA/MRHgAAAAAD///eAAAAAAAAAAAAIB/AAAAPwAAAB8AAIAfAACAPwAAgD8AAIAD
        AACAAQAAgAAAAMAAAAD8AQAA/AEAAPwBAAD8AQAA/AEAAP4DAAAoAAAAIAAAAEAAAAABAAQAAAAAAAAC
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAAAAAHiIiIiIiIiIgAAAAAAAAAD3d3d3eA
        AAh4gAAAAAAAAA93d3d3d3d3eIgAAAAAAAAP//////////eIAAAAAAAAAHAAAAAAAAB/iAAAAAAAAAAA
        eIiIiIiIB/gAAAAAAAAAAP//////eIAAAAAAAAAAAAD0zMzMzHiAAAAAAAAAAAAA9MwAzMx4gAAAAAAA
        AAAAAPTMCwzMeIAAAAAAAAAAAAD0zMCwDHiAAAAAAAAAAAAA9MzMC7B4gAAAAAAAAAAAAPTMzMC7CIAA
        AAAAAAAAAAD0REREC7AAAAAAAAAAAAAA//////C7sIiIiIiIgAAAAAd3dwAAC7sHeAAAh4gAAAAAAAC7
        u7u7sAd3d3eIgAAAAAAAALu7u7uw////eIAAAAAAAAALuwAAAAAAB/iAAAAAAAAAALuwiIiIiIB/gAAA
        AAAAAAAAuw////eIAAAAAAAAAAAADwuwzMzHiAAAAAAAAAAAAA9AuwzMx4gAAAAAAAAAAAAPTACwzMeI
        AAAAAAAAAAAAD0zMCwzHiAAAAAAAAAAAAA9MzMAMx4gAAAAAAAAAAAAPTMzMzMeIAAAAAAAAAAAAD0RE
        RERHiAAAAAAAAAAAAA//////94gAAAAAAAAAAAAAd3d3d3d4AAAAAAAAAAAAAAAAAAAAAAAAgAA//wAA
        H/8AAA//AAAH/wAAB/+AAAf/wAAH/+AAD//gAD//4AA//+AAP//gAD//4AA//+AAP//gAAAH4AAAA/AA
        AAH4AAAA/8AAAP/wAAD/+AAA//wAAf/8AAf//AAH//wAB//8AAf//AAH//wAB//8AAf//AAH//4AB///
        AA8oAAAAMAAAAGAAAAABAAQAAAAAAIAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAA
        AACAAIAAgIAAAMDAwACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAd4iIiIiIiIiIiIiIgAAAAAAAAAAAAAAAd4iIiIiIiIiIiIiIiAAAAAAAAAAAAAAA/3
        d3d3d3d4AAAAB4iIAAAAAAAAAAAAAA///////////////3iIgAAAAAAAAAAAAA////////////////eI
        gAAAAAAAAAAAAAB3AAAAAAAAAAAAB/+IgAAAAAAAAAAAAAAHB4iIiIiIiIiIgH/4gAAAAAAAAAAAAAAA
        D3d3d3d3d3d4iAf/gAAAAAAAAAAAAAAAD3/////////4iIAAAAAAAAAAAAAAAAAAD4TMzMzMzMz4iIAA
        AAAAAAAAAAAAAAAAD4TMzMzMzMz4iIAAAAAAAAAAAAAAAAAAD4TMzMzMzMz4iIAAAAAAAAAAAAAAAAAA
        D4TMzMzMzMz4iIAAAAAAAAAAAAAAAAAAD4TMzADMzMz4iIAAAAAAAAAAAAAAAAAAD4TMzAsMzMz4iIAA
        AAAAAAAAAAAAAAAAD4TMzMCwzMz4iIAAAAAAAAAAAAAAAAAAD4TMzMwLAMz4iIAAAAAAAAAAAAAAAAAA
        D4RERERAuwT4iIAAAAAAAAAAAAAAAAAAD4iIiIiIC7B4iIAAAAAAAAAAAAAAAAAAD///////8LsAiIAA
        AAAAAAAAAAAAAAAAAHd3d3d3dwu7CIAAAAAAAAAAAAAAAAAAAAd3d3d3d3ALsIAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAuwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7sAAAAAAAAAAAAAAAAAAAAAAAAAu7u7u7uw
        iIiIiIiIiIgAAAAAAAAAAAAAALu7u7u7CIiIiIiIiIiAAAAAAAAAAAAAAAu7u7u7sAd4AAAAB4iIAAAA
        AAAAAAAAAAC7u7u7u7D//////3iIgAAAAAAAAAAAAA8LuwAAAA////////eIgAAAAAAAAAAAAABwC7AA
        AAAAAAAAB/+IgAAAAAAAAAAAAAAHALsAiIiIiIiIgH/4gAAAAAAAAAAAAAAADwu7B3d3d3d4iAf/gAAA
        AAAAAAAAAAAAD3ALsP/////4iIAAAAAAAAAAAAAAAAAAD4TAuwzMzMz4iIAAAAAAAAAAAAAAAAAAD4TM
        C7DMzMz4iIAAAAAAAAAAAAAAAAAAD4TMwAsMzMz4iIAAAAAAAAAAAAAAAAAAD4TMzMCwzMz4iIAAAAAA
        AAAAAAAAAAAAD4TMzMwLDMz4iIAAAAAAAAAAAAAAAAAAD4TMzMzADMz4iIAAAAAAAAAAAAAAAAAAD4TM
        zMzMzMz4iIAAAAAAAAAAAAAAAAAAD4TMzMzMzMz4iIAAAAAAAAAAAAAAAAAAD4RERERERET4iIAAAAAA
        AAAAAAAAAAAAD4iIiIiIiIh4iIAAAAAAAAAAAAAAAAAAD//////////3iIAAAAAAAAAAAAAAAAAAAHd3
        d3d3d3d3eIAAAAAAAAAAAAAAAAAAAAd3d3d3d3d3d4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AD///wAAAAAAH///AAAAAAAP//8AAAAAAAf//wAAAAAAA///AAAAAAAD//8AAIAAAAP//wAAwAAAA///
        AADgAAAD//8AAPAAAAf//wAA8AAAP///AADwAAA///8AAPAAAD///wAA8AAAP///AADwAAA///8AAPAA
        AD///wAA8AAAP///AADwAAA///8AAPAAAD///wAA8AAAP///AADwAAA///8AAPgAAD///wAA/AAAP///
        AAD+AAA///8AAP//AAAADwAA//4AAAAHAAD//wAAAAMAAP//wAAAAQAA///AAAAAAAD//8AAAAAAAP//
        4AAAAAAA///wAAAAAAD///gAAAAAAP///AAAAQAA///8AAAPAAD///wAAA8AAP///AAADwAA///8AAAP
        AAD///wAAA8AAP///AAADwAA///8AAAPAAD///wAAA8AAP///AAADwAA///8AAAPAAD///wAAA8AAP//
        /gAADwAA////AAAPAAD///+AAB8AACgAAAAQAAAAIAAAAAEAAQAAAAAAQAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AAAAAAB/gAAAf8AAAABAAAAngAAAKYAAACSAAAAjPAAAL54AAAPiAAABnAAAAEwAAAEs
        AAABDAAAAfwAAAAAAACAfwAAAD8AAAAfAACAHwAAgD8AAIA/AACAAwAAgAEAAIAAAADAAAAA/AEAAPwB
        AAD8AQAA/AEAAPwBAAD+AwAAKAAAACAAAABAAAAAAQABAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AAAAAAH//wAB/4eAAf//wAH//8AAgAPAAD/9wAA//gAAIA4AACAOAAAhDgAAII4AACBuAAAgN
        gAAIBgAAD/u/+AfB3DwAP+f+AA/7/gAHAB4AA7/uAADf8AABYHAAATBwAAEIcAABBHAAAQBwAAEAcAAB
        AHAAAf/wAAD/8AAAAACAAD//AAAf/wAAD/8AAAf/AAAH/4AAB//AAAf/4AAP/+AAP//gAD//4AA//+AA
        P//gAD//4AA//+AAAAfgAAAD8AAAAfgAAAD/wAAA//AAAP/4AAD//AAB//wAB//8AAf//AAH//wAB//8
        AAf//AAH//wAB//8AAf//gAH//8ADygAAAAwAAAAYAAAAAEAAQAAAAAAgAEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AAAAAAAAAAAAf///wAAAAAB////gAAAAAH//AfAAAAAAf///+AAAAAB////4AAAAADAA
        AfgAAAAAF//++AAAAAAH//94AAAAAAf//4AAAAAABgAPgAAAAAAGAA+AAAAAAAYAD4AAAAAABgAPgAAA
        AAAGAA+AAAAAAAYED4AAAAAABgIPgAAAAAAGAQ+AAAAAAAYAz4AAAAAAB/9vgAAAAAAH/7OAAAAAAAP/
        3YAAAAAAAf/mgAAAAAAAAAMAAAAAAAAAAcAAAAAAAAD/7//wAAAAAD/3//gAAAAAH/nAfAAAAAAP/v/+
        AAAAABcB//4AAAAACYAAfgAAAAAEz/++AAAAAAF3/94AAAAAAZv/4AAAAAABjAPgAAAAAAGGA+AAAAAA
        AYED4AAAAAABgIPgAAAAAAGAQ+AAAAAAAYAD4AAAAAABgAPgAAAAAAGAA+AAAAAAAYAD4AAAAAAB///g
        AAAAAAH//+AAAAAAAP//4AAAAAAAf//gAAAAAAAAAAAAAIAAAD///wAAAAAAH///AAAAAAAP//8AAAAA
        AAf//wAAAAAAA///AAAAAAAD//8AAIAAAAP//wAAwAAAA///AADgAAAD//8AAPAAAAf//wAA8AAAP///
        AADwAAA///8AAPAAAD///wAA8AAAP///AADwAAA///8AAPAAAD///wAA8AAAP///AADwAAA///8AAPAA
        AD///wAA8AAAP///AADwAAA///8AAPgAAD///wAA/AAAP///AAD+AAA///8AAP//AAAADwAA//4AAAAH
        AAD//wAAAAMAAP//wAAAAQAA///AAAAAAAD//8AAAAAAAP//4AAAAAAA///wAAAAAAD///gAAAAAAP//
        /AAAAQAA///8AAAPAAD///wAAA8AAP///AAADwAA///8AAAPAAD///wAAA8AAP///AAADwAA///8AAAP
        AAD///wAAA8AAP///AAADwAA///8AAAPAAD///wAAA8AAP///gAADwAA////AAAPAAD///+AAB8AAA==
</value>
  </data>
</root>